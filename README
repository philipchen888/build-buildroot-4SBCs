This is to build buildroot sdcard image for following SBC's:
rpi4b  ( Raspberry Pi 4B )
radxa  ( Rock Pi 4B plus )
rk3328 ( Renegade ROC-RK3328-CC )
tinker ( ASUS TinkerBoard )

Steps to build buildroot sdcard image:

1. Install cross compiler:
   wget https://releases.linaro.org/components/toolchain/binaries/latest-7/aarch64-linux-gnu/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
   sudo tar xvf gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz  -C /usr/local/
   wget https://releases.linaro.org/components/toolchain/binaries/latest-7/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
   sudo tar xvf gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz -C /usr/local/

2. git clone https://github.com/philipchen888/build-buildroot-4SBCs.git
   sudo apt-get install build-essential git libssl-dev nmap net-tools libncurses5-dev libncursesw5-dev dnsutils vsftpd ftp binfmt-support qemu-user-static scons libncurses5-dev libncursesw5-dev libdbus-glib-1-dev libbluetooth-dev python-dev python-setuptools python3-dev python3-pip python3-setuptools libcurl4-openssl-dev gettext dbus-x11 chrpath diffstat gawk texinfo curl flex bison device-tree-compiler python swig

3. cd ~/build-buildroot-4SBCs/rpi4b
   git clone git://git.buildroot.net/buildroot
   cp ./patches/rpi4b_defconfig ./buildroot/configs
   cp ./patches/raspberrypi4/* ./buildroot/board/raspberrypi4/
   cd buildroot
   make clean
   make rpi4b_defconfig
   make 

   The result is in ./output/images/sdcard.img

   sudo dd if=./output/images/sdcard.img of=/dev/sda bs=4096 conv=notrunc,fsync

4. cd ~/build-buildroot-4SBCs/radxa
   git clone git://git.buildroot.net/buildroot
   cp ./patches/rockpi4_defconfig ./buildroot/configs
   \rm -rf ./buildroot/board/radxa/rockpi-4
   cp -r ./patches/rockpi-4 ./buildroot/board/radxa
   cd buildroot
   make clean
   make rockpi4_defconfig 
   make

   The result is in ./output/images/sdcard.img 

   sudo dd if=./output/images/sdcard.img of=/dev/sda bs=4096 conv=notrunc,fsync

5. cd ~/build-buildroot-4SBCs/rk3328
   git clone https://github.com/FireflyTeam/kernel.git --depth=1 -b rk3328/firefly
   cp ./patches/Makefile ./kernel/arch/arm64/boot/dts/rockchip/

   git clone git://git.buildroot.net/buildroot
   vi ./patches/local.mk ( change to your path )
   cp ./patches/local.mk ./buildroot
   cp ./patches/rk3328_defconfig ./buildroot/configs
   \rm -rf ./buildroot/board/roc-rk3328-cc
   cp -r ./patches/roc-rk3328-cc ./buildroot/board
   cd buildroot
   make clean
   make rk3328_defconfig
   make uboot   ( ignore binman errors )
   vi ./output/build/uboot*/arch/arm/Kconfig delete BINMAN in ARCH_ROCKCHIP
   make

   The result is in ./output/images/sdcard.img

   sudo dd if=./output/images/sdcard.img of=/dev/sda bs=4096 conv=notrunc,fsync

6. cd ~/build-buildroot-4SBCs/tinker
   git clone https://github.com/TinkerBoard/debian_kernel.git --depth=1 -b release
   cp ./patches/gcc-wrapper.py ./debian_kernel/scripts/

   git clone git://git.buildroot.net/buildroot
   vi ./patches/local.mk ( change to your path )
   cp ./patches/local.mk ./buildroot
   cp ./patches/tinker_defconfig ./buildroot/configs
   \rm -rf ./buildroot/board/asus/tinker
   cp -r ./patches/tinker ./buildroot/board/asus
   cd buildroot
   make clean
   make tinker_defconfig
   make

   The result is in ./output/images/sdcard.img

   sudo dd if=./output/images/sdcard.img of=/dev/sda bs=4096 conv=notrunc,fsync

plugin sdcard to SBC
login:
username: root
password: linaro

setup wifi:
Note: Both radxa and rk3328 need to plugin usb wifi dongle.
      radxa on board wifi is not working in buildroot due to lack of software.
      rk3328 has no on board wifi.

vi /etc/wpa_supplicant.conf ( change to:
update_config=1
country=US
network={
        ssid="MYNETWORK"
        psk="secret"
}

vi /etc/network/interfaces ( delete everything after iface lo inet loopback )

vi /etc/rc.local ( change to:
#!/bin/sh
wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant.conf  ( radxa uses wlan1 )

chmod 755 /etc/rc.local

vi /etc/init.d/rcS ( append:
source /etc/rc.local

vi /etc/vsftpd.conf ( anonymous_enable=NO, local_enable=YES, write_enable=YES )

reboot

adduser linaro
date
aplay -l
aplay -D plughw:1,0 /home/linaro/song.wav
mpg123 -a hw:1,0 /home/linaro/song.mp3
